{
  "name": "vibe-coder-mcp",
  "version": "0.3.1",
  "description": "Production-ready MCP server with complete agent integration, multi-transport support, and comprehensive development automation tools for AI-assisted workflows.",
  "main": "build/index.js",
  "type": "module",
  "scripts": {
    "build": "tsc && npm run copy-assets && npm run fix-permissions",
    "copy-assets": "mkdir -p build/tools/vibe-task-manager && cp -r src/tools/vibe-task-manager/prompts build/tools/vibe-task-manager/",
    "fix-permissions": "chmod +x build/unified-cli.js",
    "start": "cross-env NODE_ENV=production LOG_LEVEL=info node build/index.js",
    "start:sse": "cross-env NODE_ENV=production LOG_LEVEL=info node build/index.js --sse",
    "dev": "tsc -w & cross-env NODE_ENV=development nodemon build/index.js | pino-pretty",
    "dev:sse": "tsc -w & cross-env NODE_ENV=development nodemon build/index.js --sse | pino-pretty",
    "lint": "eslint \"src/**/*.ts\"",
    "test": "vitest run --exclude '**/e2e/**'",
    "test:ci-safe": "vitest run --exclude '**/e2e/**' --exclude '**/live/**' --exclude '**/scenarios/**' --exclude 'src/tools/fullstack-starter-kit-generator/__tests__/research-enhanced.test.ts' --exclude 'src/tools/vibe-task-manager/__tests__/core/dependency-graph.test.ts' --reporter=verbose",
    "test:ci-optimized": "cross-env NODE_OPTIONS='--max-old-space-size=2048' OPTIMIZE_FOR_CI=true vitest run --exclude '**/e2e/**' --exclude '**/live/**' --exclude '**/scenarios/**' --reporter=basic --no-coverage --silent",
    "test:unit:ci": "cross-env TEST_TYPE=unit NODE_OPTIONS='--max-old-space-size=1024' vitest run \"src/**/__tests__/**/*.test.ts\" --reporter=basic --no-coverage --silent",
    "test:integration:ci": "cross-env TEST_TYPE=integration NODE_OPTIONS='--max-old-space-size=2048' vitest run '**/integration/**/*.test.ts' '**/integrations/**/*.test.ts' '**/__integration__/**/*.test.ts' --exclude '**/live/**' --reporter=basic --no-coverage --silent",
    "test:unit": "vitest run --exclude '**/e2e/**' --exclude '**/__integration__/**' --exclude '**/integration/**' --exclude '**/integrations/**' --exclude '**/live/**' --exclude '**/scenarios/**' --exclude '**/__tests__/scenarios/**'",
    "test:integration": "vitest run '**/integration/**/*.test.ts' '**/integrations/**/*.test.ts' '**/__integration__/**/*.test.ts' 'src/**/*integration*.test.ts'",
    "test:e2e": "E2E_MODE=mock vitest run \"test/e2e/**/*.test.ts\" --testTimeout=30000",
    "test:e2e:real": "E2E_MODE=real vitest run \"test/e2e/**/*.test.ts\" --testTimeout=120000",
    "test:e2e:perf": "E2E_MODE=real E2E_SKIP_SLOW=false vitest run \"test/e2e/**/*.test.ts\" --testTimeout=300000",
    "test:watch": "vitest --exclude '**/e2e/**'",
    "test:unit:watch": "vitest \"src/**/__tests__/**/*.test.ts\"",
    "test:integration:watch": "vitest \"src/**/__integration__/**/*.test.ts\"",
    "test:e2e:watch": "E2E_MODE=mock vitest \"test/e2e/**/*.test.ts\" --testTimeout=30000",
    "test:all": "vitest run",
    "coverage": "vitest run --coverage",
    "coverage:unit": "vitest run --coverage \"src/**/__tests__/**/*.test.ts\"",
    "coverage:integration": "vitest run --coverage \"src/**/__integration__/**/*.test.ts\"",
    "clean": "rm -rf build",
    "type-check": "tsc --noEmit",
    "coverage:e2e": "vitest run --coverage \"test/e2e/**/*.test.ts\"",
    "test:ci": "vitest run --reporter=junit --outputFile=test-results.xml",
    "test:code-map:e2e": "vitest run \"test/e2e/code-map-generator/**/*.test.ts\"",
    "test:vibe-task-manager:e2e": "vitest run \"test/e2e/vibe-task-manager/**/*.test.ts\"",
    "test:agent-integration": "node test-agent-task-integration.cjs",
    "test:multi-transport": "node test-multi-transport-agents.cjs",
    "test:agent-response": "node test-agent-response-integration.cjs",
    "test:full-integration": "npm run test:agent-integration && npm run test:multi-transport && npm run test:agent-response",
    "test:memory": "cross-env NODE_OPTIONS='--expose-gc --max-old-space-size=2048' vitest run --exclude '**/e2e/**'",
    "test:memory:debug": "cross-env NODE_OPTIONS='--expose-gc --max-old-space-size=2048' MEMORY_DEBUG=true vitest run --exclude '**/e2e/**'",
    "test:optimized": "cross-env NODE_OPTIONS='--expose-gc --max-old-space-size=1024' vitest run --exclude '**/e2e/**' --reporter=basic",
    "test:fast": "cross-env NODE_OPTIONS='--expose-gc' vitest run --exclude '**/e2e/**' --exclude '**/__integration__/**' --exclude '**/integration/**' --exclude '**/integrations/**' --exclude '**/live/**' --exclude '**/scenarios/**' --exclude '**/__tests__/scenarios/**' --reporter=basic --run --no-coverage",
    "validate-enhancements": "node build/tools/vibe-task-manager/scripts/manual-validation-runner.js",
    "test:live-validation": "vitest run \"src/tools/vibe-task-manager/__tests__/live-validation/**/*.test.ts\" --testTimeout=60000",
    "test:ci-excluded": "vitest run \"src/tools/fullstack-starter-kit-generator/__tests__/research-enhanced.test.ts\" \"src/tools/vibe-task-manager/__tests__/core/dependency-graph.test.ts\" --reporter=verbose",
    "security:audit": "npm audit --audit-level=moderate",
    "security:fix": "npm audit fix",
    "deps:check": "npm outdated",
    "deps:update": "npm update",
    "package:check": "npm pack --dry-run",
    "package:size": "npm pack --dry-run | tail -1",
    "prepack": "npm run clean && npm run build && npm run type-check",
    "prepare": "npm run build",
    "prepublishOnly": "npm run security:audit && npm run lint",
    "validate:pre-publish": "./scripts/pre-publish-validation.sh",
    "validate:post-publish": "./scripts/post-publish-validation.sh",
    "release:patch": "npm version patch && git push origin main --tags",
    "release:minor": "npm version minor && git push origin main --tags",
    "release:major": "npm version major && git push origin main --tags",
    "release:prerelease": "npm version prerelease --preid=alpha && git push origin main --tags"
  },
  "keywords": [
    "MCP",
    "model-context-protocol",
    "AI",
    "artificial-intelligence",
    "workflow",
    "automation",
    "Claude",
    "task-manager",
    "project-management",
    "code-generation",
    "semantic-routing",
    "embeddings",
    "developer-tools",
    "development-automation",
    "agent-orchestration",
    "multi-agent",
    "multi-transport",
    "real-time-notifications",
    "dynamic-port-allocation",
    "production-ready",
    "typescript",
    "nodejs",
    "cli-tool",
    "development-workflow",
    "code-analysis",
    "research-automation",
    "prd-generation",
    "user-stories",
    "task-decomposition"
  ],
  "author": {
    "name": "Vibe Coder MCP Team",
    "url": "https://github.com/freshtechbro/Vibe-Coder-MCP"
  },
  "license": "MIT",
  "publishConfig": {
    "access": "public",
    "registry": "https://registry.npmjs.org/"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.7.0",
    "@types/figlet": "^1.7.0",
    "@types/inquirer": "^9.0.9",
    "@types/uuid": "^10.0.0",
    "@types/ws": "^8.18.1",
    "@xenova/transformers": "^2.17.1",
    "axios": "^1.6.7",
    "boxen": "^7.1.1",
    "cli-table3": "^0.6.5",
    "commander": "^14.0.0",
    "cors": "^2.8.5",
    "dependency-cruiser": "^16.10.2",
    "dotenv": "^16.4.5",
    "express": "^4.21.2",
    "figlet": "^1.8.2",
    "fs-extra": "^11.2.0",
    "glob": "^11.0.2",
    "inquirer": "^12.9.0",
    "js-yaml": "^4.1.0",
    "node-fetch": "^3.3.2",
    "ora": "^8.0.1",
    "pino": "^9.6.0",
    "simple-git": "^3.22.0",
    "uuid": "^11.1.0",
    "web-tree-sitter": "^0.20.8",
    "wrap-ansi": "^9.0.0",
    "ws": "^8.18.2",
    "yaml": "^2.8.0",
    "zod": "^3.22.4",
    "zod-to-json-schema": "^3.24.5"
  },
  "devDependencies": {
    "@types/cors": "^2.8.18",
    "@types/express": "^4.17.22",
    "@types/fs-extra": "^11.0.4",
    "@types/glob": "^8.1.0",
    "@types/js-yaml": "^4.0.9",
    "@types/node": "^22.13.14",
    "@typescript-eslint/eslint-plugin": "^8.28.0",
    "@vitest/coverage-v8": "^3.0.9",
    "@vitest/ui": "^3.0.9",
    "chalk": "^5.5.0",
    "cross-env": "^7.0.3",
    "eslint": "^8.56.0",
    "eventsource": "^2.0.2",
    "nodemon": "^3.0.3",
    "pino-pretty": "^13.0.0",
    "tree-sitter-cli": "^0.25.4",
    "tree-sitter-javascript": "^0.23.1",
    "tree-sitter-python": "^0.23.6",
    "tree-sitter-typescript": "^0.23.2",
    "tree-sitter-wasms": "^0.1.12",
    "typescript": "^5.3.3",
    "vitest": "^3.0.9"
  },
  "engines": {
    "node": ">=20.0.0"
  },
  "bin": {
    "vibe-coder-mcp": "./build/unified-cli.js",
    "vibe": "./build/unified-cli.js"
  },
  "files": [
    "build/**/*",
    "README.md",
    "LICENSE",
    "package.json",
    "llm_config.json",
    "job-timeout-config.json",
    "mcp-config.json",
    "workflows.json",
    "src/config-templates/**/*",
    "src/tools/fullstack-starter-kit-generator/templates/**/*",
    "src/config/prompt-optimization.yaml"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/freshtechbro/Vibe-Coder-MCP.git"
  },
  "bugs": {
    "url": "https://github.com/freshtechbro/Vibe-Coder-MCP/issues"
  },
  "homepage": "https://github.com/freshtechbro/Vibe-Coder-MCP#readme",
  "funding": {
    "type": "github",
    "url": "https://github.com/freshtechbro"
  },
  "preferGlobal": true,
  "os": [
    "darwin",
    "linux",
    "win32"
  ],
  "cpu": [
    "x64",
    "arm64"
  ]
}
